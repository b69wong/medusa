name: Medusa Pipeline
on:
  pull_request:
    types: [edited]
    branches:
      - 'feat/improve4-treatment'

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Assert changed
        run: ./scripts/assert-changed-files-actions.sh "packages"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

  unit-tests:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Assert changed
        run: ./scripts/assert-changed-files-actions.sh "packages"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline
        
      - name: Print variables
        run: |
          git checkout $GITHUB_BASE_REF
          echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "git branch=$(git branch)"

      - name: Get changed packages 
        id: get_changed_packages
        shell: bash
        run: |
          echo "CHANGED_PACKAGES=$(git diff $GITHUB_BASE_REF $GITHUB_SHA --name-only |
          grep -o "\bpackages/[^/]\+\b" | sed "s/packages\///" | uniq)" >> $GITHUB_OUTPUT
    
      - name: Build packages
        if: steps.get_changed_packages.outputs.CHANGED_PACKAGES != ''
        run: |
          build_command="yarn build"
          for package in $(echo ${{steps.get_changed_packages.outputs.CHANGED_PACKAGES}}); do
            build_command="$build_command --filter=$package"
          done
          eval $build_command
    
      - name: Run unit tests
        if: steps.get_changed_packages.outputs.CHANGED_PACKAGES != ''
        run: |
          test_command="yarn test"
          for package in $(echo ${{steps.get_changed_packages.outputs.CHANGED_PACKAGES}}); do
            test_command="$test_command --filter=$package"
          done
          eval $test_command

  integration-tests-packages:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

      - name: Build Packages
        run: yarn build

      - name: Run integration tests
        run: yarn test:integration:packages
        env:
          DB_PASSWORD: postgres
          DB_USERNAME: postgres

  integration-tests-api:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

  integration-tests-plugins:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

      - name: Build Packages
        run: yarn build

      - name: Run plugin integration tests
        run: yarn test:integration:plugins
        env:
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          NODE_OPTIONS: "--max_old_space_size=4096"

  integration-tests-modules:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

      - name: Build Packages
        run: yarn build

      - name: Run Modules integration tests
        run: yarn test:integration:modules
        env:
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          NODE_OPTIONS: "--max_old_space_size=4096"

  integration-tests-repositories:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 10s
          --health-retries 10
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16.10.0"
          cache: "yarn"

      - name: Install dependencies
        uses: ./.github/actions/cache-deps
        with:
          extension: pipeline

      - name: Run repository integration tests
        run: yarn test:integration:repositories
        env:
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
